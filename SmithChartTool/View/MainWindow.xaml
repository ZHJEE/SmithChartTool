<Window x:Class="SmithChartTool.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:system="clr-namespace:System;assembly=System"
        xmlns:v="clr-namespace:SmithChartTool.View"
        xmlns:vm="clr-namespace:SmithChartTool.ViewModel"
        xmlns:util="clr-namespace:SmithChartTool.Utility"
        xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
        xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib"
        Title="{Binding Title}" 
        Width="1024"
        Height="768" 
        MinWidth="800" 
        MinHeight="600"
       
        >
    
    <Window.Resources>
        <util:TextBoxValueConverter x:Key="TextBoxValueConverter"/>
        <util:StringToComplex32Converter x:Key="StringToComplex32Converter"/>
        <util:BooleanInvertConverter x:Key="BooleanInvertConverter"/>
        
        <ControlTemplate x:Key="ValidationTemplate">
            <StackPanel Orientation="Horizontal">
                <AdornedElementPlaceholder/>
                <!--<TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>-->
                <TextBlock Foreground="Red" FontSize="12">!</TextBlock>
            </StackPanel>
        </ControlTemplate>

        <Style x:Key="TextBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="oxySmithChartStyle" TargetType="{x:Type oxy:PlotView}">
            <Setter Property="DefaultTrackerTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <oxy:TrackerControl Background="White" LineExtents="{Binding PlotModel.PlotArea}" LineStroke="Black" Position="{Binding Position}">
                            <Border Margin="2" BorderBrush="Gray">
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <!--Style="{StaticResource NormalTextStyle}"-->
                                    <TextBlock Grid.Column="0" Margin="1" Text="{Binding DataPoint.X, StringFormat={}{0:0.###}}" />
                                    <TextBlock Grid.Column="1" Margin="1" Text=" + " />
                                    <TextBlock Grid.Column="2" Margin="1" Text="{Binding DataPoint.Y, StringFormat={}{0:0.###}}" />
                                    <TextBlock Grid.Column="3" Margin="1" Text=" j" />
                                </Grid>
                            </Border>
                        </oxy:TrackerControl>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New project">
                    <MenuItem.Icon>
                        <Image Source="Images\Icons\NewFile_16x.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Open project" Command="vm:MainViewModel.CommandOpenProject" Icon="pack://application:,,,/Images/Icons/OpenFolder_16x.png"></MenuItem>
                <MenuItem Header="_Save project" Command="vm:MainViewModel.CommandSaveProject" Icon="pack://application:,,,/Images/Icons/Save_16x.png"></MenuItem>
                <MenuItem Header="Save project as..." Command="vm:MainViewModel.CommandSaveProjectAs"></MenuItem>
                <Separator/>
                <MenuItem Header="Project settings" Command="vm:MainViewModel.CommandShowPrjSettingsWindow" Icon="pack://application:,,,/Images/Icons/ApplicationBehaviorSettings_16x.png"></MenuItem>
                <Separator/>
                <MenuItem Header="Ex_port plot" Command="vm:MainViewModel.CommandExportSmithChartImage"></MenuItem>
                <Separator/>
                <MenuItem Header="_Exit" Command="vm:MainViewModel.CommandCloseApp"></MenuItem>
            </MenuItem>
            
            <MenuItem Header="_Insert">
                <MenuItem Header="Reference circle" />
            </MenuItem>
            
            <MenuItem Header="_View">
                <MenuItem Header="Impedance Smith chart" IsCheckable="True" IsChecked="{Binding Path=IsImpedanceSmithChartShown}"/>
                <MenuItem Header="Admittance Smith chart" IsCheckable="True" IsChecked="{Binding Path=IsAdmittanceSmithChartShown}"/>
            </MenuItem>
            
            <MenuItem Header="_Help">
                <MenuItem Header="View Help" Command="vm:MainViewModel.CommandViewHelp" Icon="pack://application:,,,/Images/Icons/HelpApplication_16x.png"></MenuItem>
                <MenuItem Header="Show _Log" Command="vm:MainViewModel.CommandShowLogWindow"></MenuItem>
                <Separator/>
                <MenuItem Header="_About..." Command="vm:MainViewModel.CommandShowAboutWindow" Icon="pack://application:,,,/Images/Icons/Console_16x.png"></MenuItem>
			</MenuItem>
			
        </Menu>
        <ToolBar DockPanel.Dock="Top" Background="Transparent">
            <ToolBar.Resources>
                <Style TargetType="Image">
                    <Setter Property="Width" Value="16"></Setter>
                    <Setter Property="Height" Value="16"></Setter>
                </Style>
            </ToolBar.Resources>
            <!--<Button FontFamily="Segoe MDL2 Assets" FontSize="14" Height="20" Width="20" Content="&#xE74E;"></Button>-->
            <Button x:Name="btnNewProject" Command="vm:MainViewModel.CommandNewProject">
                <Image Source="pack://application:,,,/Images/Icons/NewFile_16x.png"></Image>
            </Button>
            <Button x:Name="btnSaveProject" Command="vm:MainViewModel.CommandSaveProject">
				<Image Source="pack://application:,,,/Images/Icons/Save_16x.png"></Image>
			</Button>
            <Button x:Name="btnPrjSettings" Command="vm:MainViewModel.CommandShowPrjSettingsWindow">
                <Image Source="pack://application:,,,/Images/Icons/ApplicationBehaviorSettings_16x.png"></Image>
            </Button>
            <Button x:Name="btnSettings" Command="vm:MainViewModel.CommandShowSettingsWindow">
                <Image Source="pack://application:,,,/Images/Icons/Settings_16x.png"></Image>
            </Button>
            <ComboBox x:Name="cmbThemes" ItemsSource="{Binding}"></ComboBox>
		</ToolBar>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem >
                <ProgressBar Width="200" Height="20"></ProgressBar>
            </StatusBarItem>
            <Separator></Separator>
            <StatusBarItem>
                <TextBlock>Ready</TextBlock>
            </StatusBarItem>
        </StatusBar >

        <Grid Margin="10" Background="{DynamicResource WindowBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="240" MinWidth="210" />
                <ColumnDefinition Width="5" MinWidth="5"/>
				<ColumnDefinition Width="*" MinWidth="200"/>
			</Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Header="Project settings">
                    <StackPanel Grid.Column="0" Grid.IsSharedSizeScope="True">
                        <!--<v:LabeledControl Header="Name" Orientation="Horizontal">
                            <TextBox x:Name="tbName" Text="{Binding Path=ProjectName, Mode=TwoWay}"></TextBox>
                        </v:LabeledControl>
                        <v:LabeledControl Header="Path" Orientation="Horizontal">
                            <TextBlock x:Name="tblPath" Text="{Binding Path=ProjectPath, Mode=TwoWay}" ></TextBlock>
                        </v:LabeledControl>
                        <v:LabeledControl Header="Description" Orientation="Vertical">
                            <TextBox x:Name="tbDescription" Text="{Binding Path=ProjectDescription, Mode=TwoWay}" Height="100" MaxHeight="100" AcceptsReturn="True" AcceptsTab="True"  TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" SpellCheck.IsEnabled="True"/>
                        </v:LabeledControl>-->
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Row="1" Header="Smith Chart settings">
                    <StackPanel Grid.Column="0" Grid.IsSharedSizeScope="True">
                        <v:LabeledControl Header="Frequency [Hz]">
                            <TextBox x:Name="tbFrequency" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Style="{StaticResource TextBoxInError}">
                                <TextBox.Text>
                                    <Binding Path="Frequency"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                        <!--StringFormat="g8"-->
                                        <Binding.ValidationRules>
                                            <vm:DoubleValueRangeRule Min="1e3" Max="100e9" ValidationStep="RawProposedValue"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </v:LabeledControl>
                        <v:LabeledControl Header="Ref. Impedance [Ohm]">
                            <!--<v:UnitTextBoxControl x:Name="tbRefImpedance" Unit="Ohm" Text="{Binding Path=SC.ReferenceImpedance.Impedance}"></v:UnitTextBoxControl>-->
                            <TextBox x:Name="tbRefImpedance" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Style="{StaticResource TextBoxInError}">
                                <TextBox.Text>
                                    <Binding Path="ReferenceImpedance"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource StringToComplex32Converter}">
                                        <Binding.ValidationRules >
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox> 
                        </v:LabeledControl>
                        <v:LabeledControl Header="Normalized">
                            <CheckBox x:Name="chkIsNormalized" IsChecked="{Binding Path=IsNormalized, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                        </v:LabeledControl>
              
                        <Button x:Name="btnTestFeature" Content="Test feature" Command="vm:MainViewModel.CommandTestFeature"></Button>
                        <!--<Button x:Name="btnExecuteSync" Content="Normal Execute" IsEnabled="{Binding Path=bli, Converter={StaticResource BooleanInvertConverter}, ConverterParameter=21}"></Button>
                        <Button x:Name="btnExecuteAsync" IsEnabled="{Binding Path=bli}">Async Execute</Button>
                        <Button x:Name="btnExecuteParallelAsync" Command="vm:MainViewModel.CommandXYAsync" IsEnabled="{Binding Path=bli}">Parallel Async Execute</Button>-->
                        <!--<Button x:Name="btnAnimationTest">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click" SourceName="btnAnimationTest">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation From="Red" To="Blue" Duration="0:0:1.56" AutoReverse="True" Storyboard.TargetName="blub" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                            123
                        </Button>-->

                        <ListView x:Name="InputImpedances" ItemsSource="{Binding InputImpedances}" >
                            <ListView.View>
                                <GridView ScrollViewer.VerticalScrollBarVisibility="Visible">
                                   
                                    <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}"  Width="50"/>
                                    <GridViewColumn Header="Impedance" DisplayMemberBinding="{Binding Impedance}" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Row="2" Header="Circuit Elements">
					<ListBox util:DragDropHelper.IsDragSource="True" ItemsSource="{Binding Model.Schematic.AvailableElements}" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
						<ListBox.Template>
                            <ControlTemplate TargetType="ListBox">
                                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" >
                                    <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.Resources>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBoxItem">
                                            <v:SchematicElementSourceControl Type="{Binding}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Resources>
                    </ListBox>
                </GroupBox>
            </Grid>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="Transparent" />

			<Grid Grid.Column="2">
				<Grid.RowDefinitions>
					<RowDefinition Height="3*"/>
					<RowDefinition Height="5" MinHeight="5"/>
					<RowDefinition Height="*" MinHeight="150"/>
				</Grid.RowDefinitions>
				<GroupBox Grid.Row="0" Header="Smith Chart" x:Name="gbSmithChartPlot" >
					<Grid x:Name="grSmithChartPlot">
                        <oxy:PlotView x:Name="oxySmithChart" Style="{StaticResource oxySmithChartStyle}" Model="{Binding Model.SC.Plot}" Background="Transparent"  Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}">
                            <oxy:PlotView.Height>
								<MultiBinding>
									<MultiBinding.Bindings>
										<Binding Path="ActualWidth" ElementName="grSmithChartPlot"/>
										<Binding Path="ActualHeight" ElementName="grSmithChartPlot"/>
									</MultiBinding.Bindings>
									<MultiBinding.Converter>
										<util:PlotSizeConverter></util:PlotSizeConverter>
									</MultiBinding.Converter>
								</MultiBinding>
							</oxy:PlotView.Height>
						</oxy:PlotView>
					</Grid>
				</GroupBox>

				<GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" ResizeDirection="Rows" Background="Transparent" />

				<GroupBox  Grid.Row="2" Header="Schematic">
					<ListBox IsHitTestVisible="True" Width="auto" Background="White" AllowDrop="True" util:DragDropHelper.IsDropTarget ="True" ItemsSource="{Binding Model.Schematic.Elements}">
						<ListBox.Template>
							<ControlTemplate TargetType="ListBox">
								<ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" >
									<StackPanel Orientation="Horizontal" IsItemsHost="True" />
								</ScrollViewer>
							</ControlTemplate>
						</ListBox.Template>
						<ListBox.Resources>
							<Style TargetType="ListBoxItem">
                                <Setter Property="Focusable" Value="True" ></Setter>
                                <Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ListBoxItem">
                                            <!--<v:SchematicElementControl DataContext="{Binding}" />-->
                                            <v:SchematicElementControl Type="{Binding Type}" Designator="{Binding Designator}" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            
                                        </ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</ListBox.Resources>
					</ListBox>
				</GroupBox>
			</Grid>
		</Grid>
    </DockPanel>
</Window>
